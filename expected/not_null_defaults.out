-- basic builtin datatypes
SELECT * FROM pglogical_regress_variables()
\gset
\c :provider_dsn
CREATE TABLE public.basic_dml (
	id serial primary key,
	other integer,
	data text,
	something interval
);
-- insert rows with basic without the to be added default
INSERT INTO basic_dml(other, data, something)
VALUES (5, 'foo', '1 minute'::interval),
       (4, 'bar', '12 weeks'::interval),
       (3, 'baz', '2 years 1 hour'::interval),
       (2, 'qux', '8 months 2 days'::interval),
       (1, NULL, NULL);
ALTER TABLE public.basic_dml ADD COLUMN not_null_default integer DEFAULT 0 NOT NULL;
SELECT id, other, data, something, not_null_default FROM basic_dml ORDER BY id;
 id | other | data |    something     | not_null_default 
----+-------+------+------------------+------------------
  1 |     5 | foo  | @ 1 min          |                0
  2 |     4 | bar  | @ 84 days        |                0
  3 |     3 | baz  | @ 2 years 1 hour |                0
  4 |     2 | qux  | @ 8 mons 2 days  |                0
  5 |     1 |      |                  |                0
(5 rows)

\c :subscriber_dsn
CREATE TABLE public.basic_dml (
	id serial primary key,
	other integer,
	data text,
	something interval,
	not_null_default integer DEFAULT 0 NOT NULL
);
\c :provider_dsn
SELECT * FROM pglogical.replication_set_add_table('default', 'basic_dml', synchronize_data := true);
 replication_set_add_table 
---------------------------
 t
(1 row)

SELECT pglogical.wait_slot_confirm_lsn(NULL, NULL);
 wait_slot_confirm_lsn 
-----------------------
 
(1 row)

\c :subscriber_dsn
BEGIN;
SET LOCAL statement_timeout = '10s';
SELECT pglogical.wait_for_table_sync_complete('test_subscription', 'basic_dml');
 wait_for_table_sync_complete 
------------------------------
 
(1 row)

COMMIT;
SELECT id, other, data, something, not_null_default FROM basic_dml ORDER BY id;
 id | other | data |    something     | not_null_default 
----+-------+------+------------------+------------------
  1 |     5 | foo  | @ 1 min          |                0
  2 |     4 | bar  | @ 84 days        |                0
  3 |     3 | baz  | @ 2 years 1 hour |                0
  4 |     2 | qux  | @ 8 mons 2 days  |                0
  5 |     1 |      |                  |                0
(5 rows)

\c :provider_dsn
\set VERBOSITY terse
SELECT pglogical.replicate_ddl_command($$
	DROP TABLE public.basic_dml CASCADE;
$$);
NOTICE:  drop cascades to table public.basic_dml membership in replication set default
 replicate_ddl_command 
-----------------------
 t
(1 row)

